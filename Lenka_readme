Lenka's log, terran date tuesday april 10th, 2018:

My scaleway server.

It's THE server running in the private cloud.
And I need to remember how to access it.
Because there is some problem installing npm and Toni thinks
it's gonna get fixed if I use this My scaleway server,
which is paid.

The access:

run ssh root@51.15.134.235

(That's the IP address to connect to.)

There is my public ssh key, which I should try not to overwrite.
So it should not ask me for a password.

====================================================================
Lenka's log, terran date wednesday april 11th, 2018:

Behold the npm!

First run:

npm install

Second run:

npm start

= it will serve a page on localhost:8080....with text "React simple starter"

====================================================================
Lenka's log, terran date saturday april 14th, 2018:

TIL: how to get youtube API key
go to console.developers.google.com, search for APIs and services,
search for youtube api search v3, go to credentials and generate API key.

This api key put as a constant const API_KEY = 'the key' into index.html

And also download one package: npm install --save youtube-api-search
The --save means that it gets saved into package.json file

SEARCH BAR

file: search_bar.js

===================================================================
Lenka's log, terran date sunday april 15th, 2018:

TIL: declaring the component Search Bar
1. Write the component into components/search_bar.js
2. Export it (export default SearchBar)
3. Import it into index.html file

==================================================================
Lenka's log, terran date monday april 16th, 2018:

TIL: Creating the component as a class, not a function (Search Bar)
- onChange eventhandler	
- and using an arrow function to make it more neat
- STATE = plain javascript object that is used to record and react to user events

==================================================================
Lenka's log, terran date tuesday april 17th, 2018:

TIL: - this.state and this.setState feature
- YTSearch with API key
- import of Component (class App extends Component)
- constructor

==================================================================
Lenka's log, terran date wednesday april 18th, 2018:

TIL:
- VideoListItem
- how to iterate through array without a for loop = with a map
	const videoItems = props.videos.map((video) => {
	console.log(video)
	}
- the snippet object = in the browser console of each video: info about id, title, 
description
- HTML formatting (className and div) of the video_list_item.js - to 
see video picture and video heading


==================================================================
Lenka's log, terran date wednesday april 25th, 2018:

Long time no see. The video play  is still not working. 
Now working on the video list to be clickable.
Step 1 - selectedVideo
index.js = add selectedVideo:null to the App this.state
= pass the selectedVideo to the render videoDetail 
{this.state.selectedVideo}
= YTSearch: set the initial value of selected video to videos[0]
Step 2 - implement callback
callback will be a function which we pass from App to video_list and to 
Video_list_item
= index.js render, add to VideoList "onVideoSelect"={selectedvideo => 
this.setState({selectedVideo})}
= in video_list pass another onVideoSelect as another property to 
VideoList
= in video_list_item pass onVideoSelect to VideoListItem
= in video_list_item add to the li component onClick-{() => 
onVideoSelect(video)}

==================================================================
Lenka's log, terran date wednesday april 25th, 2018:

TIL Working SearchBar
= define callback, with a method in the App (index.js) = put all the 
YTSearch inside videoSearch(term) {}
= to constructor (index.js) write this.videoSearch('surfboards');
= in search_bar.js add a new function onInputChange(term) and modify 
render input onChange to point there

The new search triggers after every change = after every letter written. 
Maybe it's better to trigger it only every second and half
= install lodash (npm install --save lodash) and import to index.js
= into index.js render: const VideoSearch = _.debounce((term) => { 
this.videoSearch(term) }, 300)
= pass the new videoSearch function into the property of SearchBar

==================================================================
Lenka's log, terran date monday april 30th, 2018:

HOW THINGS WORK
= the difference between class based component and functional component:
CLASS COMPONENT
 = when we want concept of state in our component
FUNCTIONAL COMPONENT
 = (video list, video list item)
 = whenever we have a simple component that just takes some number of 
properties and returns some amount of static JSX
 = lightweight and fast


STATE
 = inside the constructor

CALLBACK
 = to manipulate the data (onSearchVideo, onVideoSelect)
